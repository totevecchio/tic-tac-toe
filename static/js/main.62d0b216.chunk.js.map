{"version":3,"sources":["utils.js","App.js","index.js"],"names":["useLocalStorageState","key","defaultValue","serialize","JSON","stringify","deserialize","parse","React","valueInLocalStorage","window","localStorage","getItem","state","setState","prevKeyRef","prevKey","current","removeItem","setItem","Board","squares","onClick","renderSquare","i","className","Game","Array","fill","history","setHistory","currentStep","setCurrentStep","currentSquares","winner","lines","length","a","b","c","calculateWinner","nextValue","xSquaresCount","filter","r","calculateNextValue","status","every","Boolean","calculateStatus","moves","map","stepSquares","step","desc","isCurrentStep","disabled","square","newHistory","slice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LASA,SAASA,EACPC,GAGC,IAFDC,EAEA,uDAFe,GAEf,yDADyD,GACzD,IADCC,iBACD,MADaC,KAAKC,UAClB,MAD6BC,mBAC7B,MAD2CF,KAAKG,MAChD,EACA,EAA0BC,YAAe,WACvC,IAAMC,EAAsBC,OAAOC,aAAaC,QAAQX,GACxD,OAAIQ,EACKH,EAAYG,GAEU,oBAAjBP,EAA8BA,IAAiBA,KAL/D,mBAAOW,EAAP,KAAcC,EAAd,KAQMC,EAAaP,SAAaP,GAWhC,OATAO,aAAgB,WACd,IAAMQ,EAAUD,EAAWE,QACvBD,IAAYf,GACdS,OAAOC,aAAaO,WAAWF,GAEjCD,EAAWE,QAAUhB,EACrBS,OAAOC,aAAaQ,QAAQlB,EAAKE,EAAUU,MAC1C,CAACZ,EAAKY,EAAOV,IAET,CAACU,EAAOC,G,WC9BjB,SAASM,EAAT,GAAsC,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QACxB,SAASC,EAAaC,GACpB,OACE,wBAAQC,UAAU,SAASH,QAAS,kBAAMA,EAAQE,IAAlD,SACGH,EAAQG,KAKf,OACE,gCACE,sBAAKC,UAAU,YAAf,UACGF,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKE,UAAU,YAAf,UACGF,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKE,UAAU,YAAf,UACGF,EAAa,GACbA,EAAa,GACbA,EAAa,SAMtB,SAASG,IAEP,MAA8B1B,EAAqB,sBAAuB,CACxE2B,MAAM,GAAGC,KAAK,QADhB,mBAAOC,EAAP,KAAgBC,EAAhB,KAGA,EAAsC9B,EACpC,mBACA,GAFF,mBAAO+B,EAAP,KAAoBC,EAApB,KAKMC,EAAiBJ,EAAQE,GACzBG,EAsBN,SAAyBb,GAYvB,IAVA,IAAMc,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAX,EAAI,EAAGA,EAAIW,EAAMC,OAAQZ,IAAK,CACrC,kBAAkBW,EAAMX,GAAxB,GAAOa,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIlB,EAAQgB,IAAMhB,EAAQgB,KAAOhB,EAAQiB,IAAMjB,EAAQgB,KAAOhB,EAAQkB,GACpE,OAAOlB,EAAQgB,GAInB,OAAO,KAzCMG,CAAgBP,GACzBQ,EA+ER,SAA4BpB,GAC1B,IAAMqB,EAAgBrB,EAAQsB,QAAO,SAACC,GAAD,MAAa,MAANA,KAAWR,OAEvD,OADsBf,EAAQsB,QAAO,SAACC,GAAD,MAAa,MAANA,KAAWR,SAC9BM,EAAgB,IAAM,IAlF7BG,CAAmBZ,GAC/Ba,EAsER,SAAyBZ,EAAQb,EAASoB,GACxC,OAAOP,EAAM,kBACEA,GACXb,EAAQ0B,MAAMC,SAAd,6CAEgBP,GA3ELQ,CAAgBf,EAAQD,EAAgBQ,GA0CvD,IAAMS,EAAQrB,EAAQsB,KAAI,SAACC,EAAaC,GACtC,IAAMC,EAAOD,EAAI,sBAAkBA,GAAS,mBACtCE,EAAgBF,IAAStB,EAC/B,OACE,6BACE,yBAAQN,UAAU,QAAQ+B,SAAUD,EAAejC,QAAS,kBAAMU,EAAeqB,IAAjF,UACGC,EADH,IACUC,EAAgB,YAAc,SAFjCF,MAQb,OACE,sBAAK5B,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,cAACL,EAAD,CAAOE,QAvDb,SAAsBmC,GACpB,IAAIvB,IAAUD,EAAewB,GAA7B,CAIA,IAAMC,EAAa7B,EAAQ8B,MAAM,EAAG5B,EAAc,GAC5CV,EAAO,YAAOY,GAEpBZ,EAAQoC,GAAUhB,EAClBX,EAAW,GAAD,mBAAK4B,GAAL,CAAiBrC,KAC3BW,EAAe0B,EAAWtB,UA6CQf,QAASY,IACvC,wBAAQR,UAAU,UAAUH,QA3ClC,WACEQ,EAAW,CAACH,MAAM,GAAGC,KAAK,QAC1BI,EAAe,IAyCX,wBAIF,sBAAKP,UAAU,YAAf,UACI,8BAAMqB,IACN,6BAAKI,UA6CAU,MAJf,WACE,OAAO,cAAClC,EAAD,KCnJTmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.62d0b216.chunk.js","sourcesContent":["import * as React from 'react'\n\n/**\n *\n * @param {String} key The key to set in localStorage for this value\n * @param {Object} defaultValue The value to use if it is not already in localStorage\n * @param {{serialize: Function, deserialize: Function}} options The serialize and deserialize functions to use (defaults to JSON.stringify and JSON.parse respectively)\n */\n\nfunction useLocalStorageState(\n  key,\n  defaultValue = '',\n  {serialize = JSON.stringify, deserialize = JSON.parse} = {},\n) {\n  const [state, setState] = React.useState(() => {\n    const valueInLocalStorage = window.localStorage.getItem(key)\n    if (valueInLocalStorage) {\n      return deserialize(valueInLocalStorage)\n    }\n    return typeof defaultValue === 'function' ? defaultValue() : defaultValue\n  })\n\n  const prevKeyRef = React.useRef(key)\n\n  React.useEffect(() => {\n    const prevKey = prevKeyRef.current\n    if (prevKey !== key) {\n      window.localStorage.removeItem(prevKey)\n    }\n    prevKeyRef.current = key\n    window.localStorage.setItem(key, serialize(state))\n  }, [key, state, serialize])\n\n  return [state, setState]\n}\n\nexport {useLocalStorageState}","import  React from \"react\";\nimport { useLocalStorageState } from \"./utils\";\n\nfunction Board({ squares, onClick }) {\n  function renderSquare(i) {\n    return (\n      <button className=\"square\" onClick={() => onClick(i)}>\n        {squares[i]}\n      </button>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n}\n\nfunction Game() {\n\n  const [history, setHistory] = useLocalStorageState(\"tic-tac-toe:history\", [\n    Array(9).fill(null),\n  ]);\n  const [currentStep, setCurrentStep] = useLocalStorageState(\n    \"tic-tac-toe:step\",\n    0\n  );\n\n  const currentSquares = history[currentStep];\n  const winner = calculateWinner(currentSquares);\n  const nextValue = calculateNextValue(currentSquares);\n  const status = calculateStatus(winner, currentSquares, nextValue);\n\n  function selectSquare(square) {\n    if (winner || currentSquares[square]) {\n      return;\n    }\n\n    const newHistory = history.slice(0, currentStep + 1);\n    const squares = [...currentSquares];\n\n    squares[square] = nextValue;\n    setHistory([...newHistory, squares]);\n    setCurrentStep(newHistory.length);\n  }\n\n  function restart() {\n    setHistory([Array(9).fill(null)]);\n    setCurrentStep(0);\n  }\n\n  function calculateWinner(squares) {\n\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n        \n      }\n    }\n    return null;\n  }\n\n  const moves = history.map((stepSquares, step) => {\n    const desc = step ? `Go to move #${step}` : \"Go to game start\";\n    const isCurrentStep = step === currentStep;\n    return (\n      <li key={step}>\n        <button className='moves' disabled={isCurrentStep} onClick={() => setCurrentStep(step)}>\n          {desc} {isCurrentStep ? \"(current)\" : null}\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board onClick={selectSquare} squares={currentSquares} />\n        <button className=\"restart\" onClick={restart}>\n          restart\n        </button>\n      </div>\n      <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n    </div>\n  );\n}\n\nfunction calculateStatus(winner, squares, nextValue) {\n  return winner\n    ? `Winner: ${winner}`\n    : squares.every(Boolean)\n    ? `Scratch: Cat's game`\n    : `Next player: ${nextValue}`;\n}\n\nfunction calculateNextValue(squares) {\n  const xSquaresCount = squares.filter((r) => r === \"X\").length;\n  const oSquaresCount = squares.filter((r) => r === \"O\").length;\n  return oSquaresCount === xSquaresCount ? \"X\" : \"O\";\n}\n\n// function calculateWinner(squares) {\n\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6],\n//   ];\n//   for (let i = 0; i < lines.length; i++) {\n//     const [a, b, c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}